CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
 PROJECT( "Day9-Improved" )
 
 ADD_DEFINITIONS (-DNOMINMAX)
 
 SET(CMAKE_PREFIX_PATH C:/Qt86/5.8/msvc2015)
 SET(Shark_DIR C:/myCMake/lib/cmake/Shark)
SET(BOOST_ROOT C:/boost_1_62_0)
 #SET(BOOST_ROOT C:/boost_1_57_0)
SET(BOOST_LIBRARYDIR C:/boost_1_62_0/lib32-msvc-14.0)
#  SET(BOOST_LIBRARYDIR C:/boost_1_57_0/lib64-msvc-12.0)
  SET(Boost_USE_STATIC_LIBS ON)
 SET(OpenCV_DIR C:/opencv/build)
#SET(OpenCV_DIR C:/opencv_3_2/vc120)
  SET(CMAKE_INCLUDE_CURRENT_DIR ON)
 SET( CMAKE_AUTOMOC ON)
 
 FIND_PACKAGE( Boost 1.62 COMPONENTS system date_time filesystem program_options 
 serialization thread unit_test_framework chrono atomic REQUIRED )
 FIND_PACKAGE( Shark REQUIRED )
 FIND_PACKAGE(OpenCV)
  FIND_PACKAGE( Qt5Core)
 FIND_PACKAGE(Qt5Widgets)
 FIND_PACKAGE(Qt5Gui)
 FIND_PACKAGE(Qt5Sql)
FIND_PACKAGE(Qt5Xml)
FIND_PACKAGE(Qt5XmlPatterns)
FIND_PACKAGE(Qt5Network )
FIND_PACKAGE(Qt5Multimedia)
FIND_PACKAGE(Qt5MultimediaWidgets)
 
 
 INCLUDE_DIRECTORIES( ${Boost_INCLUDE_DIRS} ${SHARK_INCLUDE_DIRS} )
  INCLUDE_DIRECTORIES(
 ${CMAKE_CURRENT_BINARY_DIR}
 ../include
 )
 
 INCLUDE_DIRECTORIES(${OpenCV_INCLUDE_DIRS})
 
  SET( INCS
mainwindow.h
part1.h
part2.h
part3.h
 )
 



 SET( SRCS
main.cpp
mainwindow.cpp
part1.cpp
part2.cpp
part3.cpp
 )
 SET( GUIS
part1.ui
part2.ui
part3.ui
 )
 
 
 QT5_WRAP_UI( GUI_SRCS
 ${GUIS}
 )
 ADD_EXECUTABLE( ${PROJECT_NAME}
 ${INCS}
 ${SRCS}
 ${GUI_SRCS}
 )
 
 TARGET_LINK_LIBRARIES( ${PROJECT_NAME}
 ${SHARK_LIBRARIES}
 ${Boost_LIBRARIES}
 )
 TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${OpenCV_LIBS})
 TARGET_LINK_LIBRARIES(${PROJECT_NAME} Qt5::Widgets)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} Qt5::Gui)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} Qt5::Core)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} Qt5::Sql)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} Qt5::Xml)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} Qt5::XmlPatterns)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} Qt5::Network)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} Qt5::Multimedia)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} Qt5::MultimediaWidgets)
 
 